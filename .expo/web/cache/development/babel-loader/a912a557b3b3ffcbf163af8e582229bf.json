{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/lawrenceoconnor/Downloads/3 tables/cop4331-helpinghand-mobile/screens/coordinatorTasks.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { FloatingAction } from \"react-native-floating-action\";\nimport CoordCard from \"./coordCard\";\nimport { useLocation } from \"react-router-dom\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Card, ListItem, Icon } from \"react-native-elements\";\nimport { connect } from \"react-redux\";\n\nvar coordinatorTask = function coordinatorTask(_ref) {\n  var navigation = _ref.navigation;\n  useEffect(function () {\n    var unsubscribe = navigation.addListener('focus', function () {\n      console.log('Refreshed');\n\n      function handleSubmit() {\n        var obj, js, response, res;\n        return _regeneratorRuntime.async(function handleSubmit$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log(user_data.email);\n                obj = {\n                  email: user_data.email\n                };\n                js = JSON.stringify(obj);\n                console.log(js);\n                _context.prev = 4;\n                _context.next = 7;\n                return _regeneratorRuntime.awrap(fetch(\"https://helpinghand-cop4331.herokuapp.com/coord/tasks\", {\n                  method: \"POST\",\n                  headers: {\n                    \"Content-Type\": \"application/json\"\n                  },\n                  body: js\n                }));\n\n              case 7:\n                response = _context.sent;\n                _context.t0 = JSON;\n                _context.next = 11;\n                return _regeneratorRuntime.awrap(response.text());\n\n              case 11:\n                _context.t1 = _context.sent;\n                res = _context.t0.parse.call(_context.t0, _context.t1);\n                console.log(res);\n\n                if (!(res.error != null)) {\n                  _context.next = 18;\n                  break;\n                }\n\n                console.log(res.error);\n                _context.next = 21;\n                break;\n\n              case 18:\n                console.log(\"success\");\n\n                if (res != \"no such user found\") {\n                  setPosts(res);\n                } else {\n                  console.log(\"No user was found\");\n                }\n\n                return _context.abrupt(\"return\", res);\n\n              case 21:\n                _context.next = 27;\n                break;\n\n              case 23:\n                _context.prev = 23;\n                _context.t2 = _context[\"catch\"](4);\n                alert(_context.t2.toString());\n                return _context.abrupt(\"return\");\n\n              case 27:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, [[4, 23]], Promise);\n      }\n\n      handleSubmit();\n    });\n    return unsubscribe;\n  }, [navigation]);\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      posts = _useState2[0],\n      setPosts = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      tasks = _useState4[0],\n      setTasks = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selected = _useState6[0],\n      setSelected = _useState6[1];\n\n  var idTrack = useRef(null);\n  var user_data;\n\n  _retrieveData = function _retrieveData() {\n    var value;\n    return _regeneratorRuntime.async(function _retrieveData$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('user_data'));\n\n          case 3:\n            value = _context2.sent;\n\n            if (value !== null) {\n              user_data = JSON.parse(localStorage.getItem(\"user_data\"));\n              console.log(value);\n            }\n\n            _context2.next = 9;\n            break;\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](0);\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  _retrieveData();\n\n  useEffect(function () {\n    if (tasks && tasks.length > 0 && Object.values(selected).length === 0) {\n      var taskObj = {};\n      tasks.forEach(function (task) {\n        return taskObj[task.id] = false;\n      });\n      setSelected(taskObj);\n    }\n  }, [tasks, selected]);\n  var actions = [{\n    text: \"CreateTask\",\n    name: \"bt_createTask\",\n    position: 1\n  }];\n\n  function navigateToCreateTask() {\n    navigation.navigate(\"CreateTask\");\n  }\n\n  function renderCards() {\n    var _this2 = this;\n\n    console.log(posts);\n    return posts.map(function (tasks, index) {\n      return React.createElement(CoordCard, {\n        key: tasks._id,\n        name: tasks.task_name,\n        description: tasks.task_description,\n        task_location: tasks.task_location.coordinates,\n        maxVol: tasks.max_slots,\n        numVol: tasks.slots_available,\n        id: tasks._id,\n        address: tasks.task_address,\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 7\n        }\n      });\n    });\n  }\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: \"center\",\n      backgroundColor: \"#009387\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.header,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }, React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, renderCards())), React.createElement(FloatingAction, {\n    color: \"#013d38\",\n    actions: actions,\n    onPressItem: function onPressItem() {\n      return navigateToCreateTask();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }\n  }));\n  console.log(tasks);\n};\n\nexport default coordinatorTask;\nvar styles = StyleSheet.create({\n  header: {\n    flex: 1,\n    justifyContent: \"center\",\n    paddingHorizontal: 5,\n    paddingBottom: 5,\n    width: \"90%\",\n    height: \"90%\",\n    resizeMode: \"contain\"\n  }\n});\nvar areasTest = [{\n  id: \"1\",\n  name: \"Feed the Homelesss\",\n  location: \"Downtown Orlando\",\n  miles: \"2.5 miles\",\n  description: \"This is a description of feed the homeless. Need 8 participants to help go around DT Orlando to feed.\",\n  numVol: \"5\",\n  maxVol: \"8\"\n}, {\n  id: \"2\",\n  name: \"Concert Cleanup\",\n  description: \"This is a description of concert cleanup. Need 10 participants to help clean after a concert.\",\n  location: \"Amway Center\",\n  miles: \"3 miles\",\n  numVol: \"1\",\n  maxVol: \"10\"\n}, {\n  id: \"3\",\n  name: \"Set up Tents\",\n  description: \"This is a description of setting up tents. Need 6 participants.\",\n  location: \"UCF\",\n  miles: \"15 miles\",\n  numVol: \"2\",\n  maxVol: \"6\"\n}];","map":{"version":3,"sources":["/Users/lawrenceoconnor/Downloads/3 tables/cop4331-helpinghand-mobile/screens/coordinatorTasks.js"],"names":["useNavigation","React","useState","useRef","useEffect","FloatingAction","CoordCard","useLocation","Card","ListItem","Icon","connect","coordinatorTask","navigation","unsubscribe","addListener","console","log","handleSubmit","user_data","email","obj","js","JSON","stringify","fetch","method","headers","body","response","text","res","parse","error","setPosts","alert","toString","posts","tasks","setTasks","selected","setSelected","idTrack","_retrieveData","AsyncStorage","getItem","value","localStorage","length","Object","values","taskObj","forEach","task","id","actions","name","position","navigateToCreateTask","navigate","renderCards","map","index","_id","task_name","task_description","task_location","coordinates","max_slots","slots_available","task_address","flex","alignItems","backgroundColor","styles","header","StyleSheet","create","justifyContent","paddingHorizontal","paddingBottom","width","height","resizeMode","areasTest","location","miles","description","numVol","maxVol"],"mappings":"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","sourcesContent":["\nimport { useNavigation } from \"@react-navigation/native\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { FloatingAction } from \"react-native-floating-action\";\nimport CoordCard from \"./coordCard\";\nimport { useLocation } from \"react-router-dom\";\n\nimport {\n  View,\n  Text,\n  TouchableOpacity,\n  TextInput,\n  Platform,\n  StyleSheet,\n  Button,\n  ScrollView,\n} from \"react-native\";\nimport { Card, ListItem, Icon } from \"react-native-elements\";\nimport { connect } from \"react-redux\";\n\n//const buildPath = require(\"../../redux/buildPath\");\nconst coordinatorTask = ({navigation}) => {    \n  useEffect(() => {\n    const unsubscribe = navigation.addListener('focus', () => {\n      console.log('Refreshed');\n      async function handleSubmit(){\n      \n        console.log(user_data.email)\n        var obj = {email:user_data.email};\n        var js=JSON.stringify(obj);\n        console.log(js);\n  \n        try{\n          const response = await fetch(\"https://helpinghand-cop4331.herokuapp.com/coord/tasks\",{\n            method: \"POST\",\n            headers: {\"Content-Type\" : \"application/json\"},\n            body : js,\n          });\n          var res=JSON.parse(await response.text() );\n          console.log(res);\n          if (res.error != null){\n            console.log(res.error);\n          } else{\n            console.log(\"success\");  \n            if(res != \"no such user found\"){\n              setPosts(res);\n            } else{\n              console.log(\"No user was found\");\n            }\n            return res;\n          }\n        } catch (e){\n          alert(e.toString());\n          return ;\n        }\n      }\n        //test\n      handleSubmit();\n    });\n    return unsubscribe;\n  }, [navigation]);\n\n\n  const [posts, setPosts] = useState([]);\n  const [tasks, setTasks] = useState([]);\n  const [selected, setSelected] = useState({});\n  let idTrack = useRef(null);\n  var user_data;\n  \n  _retrieveData = async () => {\n    try {\n      const value = await AsyncStorage.getItem('user_data');\n      if (value !== null) {\n        user_data= JSON.parse(localStorage.getItem(\"user_data\"))\n        console.log(value);\n      }\n    } catch (error) {\n      // Error retrieving data\n    }\n  };\n_retrieveData();\n\n\n\n  useEffect(() => {\n    if (tasks && tasks.length > 0 && Object.values(selected).length === 0) {\n      let taskObj = {};\n      tasks.forEach((task) => (taskObj[task.id] = false));\n      setSelected(taskObj);\n    }\n  }, [tasks, selected]);\n\n\n\n\n  //actions for the floating action button\n  const actions = [\n    {\n      text: \"CreateTask\",\n      name: \"bt_createTask\",\n      position: 1,\n    },\n  ];\n\n  //function to navigate back to task list on cancel\n  function navigateToCreateTask() {\n    navigation.navigate(\"CreateTask\");\n  }\n\n  \n\n  //function to render the card template / replace with actual json obj returned\n  function renderCards() {\n    console.log(posts);\n    \n\n    return posts.map((tasks,index) => (\n      <CoordCard   \n        key={tasks._id}\n        name={tasks.task_name}\n        description={tasks.task_description}\n        task_location={tasks.task_location.coordinates}\n        maxVol={tasks.max_slots}\n        numVol={tasks.slots_available}\n        id = {tasks._id}\n        address ={tasks.task_address}\n\n      />\n    ));\n  }\n\n  return (\n    <View style={{ flex: 1, alignItems: \"center\", backgroundColor: \"#009387\" }}>\n      <View style={styles.header}>\n        <ScrollView>{renderCards()}</ScrollView>\n      </View>\n      <FloatingAction\n        color=\"#013d38\"\n        actions={actions}\n        onPressItem={() => navigateToCreateTask()}\n      />\n    </View>\n  );\n  console.log(tasks)\n}\nexport default coordinatorTask;\n\n\n\nconst styles = StyleSheet.create({\n  header: {\n    flex: 1,\n    justifyContent: \"center\",\n    paddingHorizontal: 5,\n    paddingBottom: 5,\n    width: \"90%\",\n    height: \"90%\",\n    resizeMode: \"contain\",\n  },\n});\n\nconst areasTest = [\n  {\n    id: \"1\",\n    name: \"Feed the Homelesss\",\n    location: \"Downtown Orlando\",\n    miles: \"2.5 miles\",\n    description:\n      \"This is a description of feed the homeless. Need 8 participants to help go around DT Orlando to feed.\",\n    numVol: \"5\",\n    maxVol: \"8\",\n  },\n  {\n    id: \"2\",\n    name: \"Concert Cleanup\",\n    description:\n      \"This is a description of concert cleanup. Need 10 participants to help clean after a concert.\",\n    location: \"Amway Center\",\n    miles: \"3 miles\",\n    numVol: \"1\",\n    maxVol: \"10\",\n  },\n  {\n    id: \"3\",\n    name: \"Set up Tents\",\n    description:\n      \"This is a description of setting up tents. Need 6 participants.\",\n    location: \"UCF\",\n    miles: \"15 miles\",\n    numVol: \"2\",\n    maxVol: \"6\",\n  },\n];\n"]},"metadata":{},"sourceType":"module"}