{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/lawrenceoconnor/Downloads/3 tables/cop4331-helpinghand-mobile/screens/volunteerTasks.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { FloatingAction } from \"react-native-floating-action\";\nimport VolunteerCard from \"./volunteetCard\";\nimport { useLocation } from \"react-router-dom\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Card, ListItem, Icon } from \"react-native-elements\";\n\nvar volunteerTask = function volunteerTask(_ref) {\n  var navigation = _ref.navigation;\n  useEffect(function () {\n    var unsubscribe = navigation.addListener('focus', function () {\n      console.log('Refreshed');\n\n      function handleSubmit() {\n        var user_data, _retrieveData, obj, js, response, res;\n\n        return _regeneratorRuntime.async(function handleSubmit$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _retrieveData = function _retrieveData() {\n                  var value;\n                  return _regeneratorRuntime.async(function _retrieveData$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          _context.prev = 0;\n                          _context.next = 3;\n                          return _regeneratorRuntime.awrap(AsyncStorage.getItem('user_data'));\n\n                        case 3:\n                          value = _context.sent;\n\n                          if (value !== null) {\n                            user_data = JSON.parse(localStorage.getItem(\"user_data\"));\n                            console.log(value);\n                          }\n\n                          _context.next = 9;\n                          break;\n\n                        case 7:\n                          _context.prev = 7;\n                          _context.t0 = _context[\"catch\"](0);\n\n                        case 9:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, null, null, [[0, 7]], Promise);\n                };\n\n                console.log(user_data.email);\n                obj = {\n                  email: user_data.email\n                };\n                js = JSON.stringify(obj);\n                console.log(js);\n                _context2.prev = 5;\n                _context2.next = 8;\n                return _regeneratorRuntime.awrap(fetch(\"https://helpinghand-cop4331.herokuapp.com/vol/tasks\", {\n                  method: \"POST\",\n                  headers: {\n                    \"Content-Type\": \"application/json\"\n                  },\n                  body: js\n                }));\n\n              case 8:\n                response = _context2.sent;\n                _context2.t0 = JSON;\n                _context2.next = 12;\n                return _regeneratorRuntime.awrap(response.text());\n\n              case 12:\n                _context2.t1 = _context2.sent;\n                res = _context2.t0.parse.call(_context2.t0, _context2.t1);\n\n                if (!(res.error != null)) {\n                  _context2.next = 18;\n                  break;\n                }\n\n                console.log(res.error);\n                _context2.next = 21;\n                break;\n\n              case 18:\n                console.log(\"success\");\n\n                if (res != \"nos such user found\") {\n                  setPosts(res);\n                } else {\n                  console.log(\"Thes call might have failed above buts its okay, there were no tasks\");\n                }\n\n                return _context2.abrupt(\"return\", res);\n\n              case 21:\n                _context2.next = 27;\n                break;\n\n              case 23:\n                _context2.prev = 23;\n                _context2.t2 = _context2[\"catch\"](5);\n                alert(_context2.t2.toString());\n                return _context2.abrupt(\"return\");\n\n              case 27:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, null, [[5, 23]], Promise);\n      }\n\n      handleSubmit();\n    });\n    return unsubscribe;\n  }, [navigation]);\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      posts = _useState2[0],\n      setPosts = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      tasks = _useState4[0],\n      setTasks = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selected = _useState6[0],\n      setSelected = _useState6[1];\n\n  var idTrack = useRef(null);\n  useEffect(function () {\n    if (tasks && tasks.length > 0 && Object.values(selected).length === 0) {\n      var taskObj = {};\n      tasks.forEach(function (task) {\n        return taskObj[task.id] = false;\n      });\n      setSelected(taskObj);\n    }\n  }, [tasks, selected]);\n\n  function renderCards() {\n    var _this2 = this;\n\n    console.log(posts);\n    return posts.map(function (tasks, index) {\n      return React.createElement(VolunteerCard, {\n        key: tasks._id,\n        name: tasks.task_name,\n        description: tasks.task_description,\n        address: tasks.task_address,\n        task_location: tasks.task_location.coordinates,\n        maxVol: tasks.max_slots,\n        numVol: tasks.slots_available,\n        task_date: tasks.task_date,\n        id: tasks._id,\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 7\n        }\n      });\n    });\n  }\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: \"center\",\n      backgroundColor: \"#009387\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.header,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, renderCards())));\n};\n\nexport default volunteerTask;\nvar styles = StyleSheet.create({\n  header: {\n    flex: 1,\n    justifyContent: \"center\",\n    paddingHorizontal: 5,\n    paddingBottom: 5,\n    width: \"90%\",\n    height: \"90%\",\n    resizeMode: \"contain\"\n  }\n});\nvar areasTest = [{\n  id: \"1\",\n  name: \"Feed the Homeless\",\n  location: \"Downtown Orlando\",\n  miles: \"2.5 miles\",\n  description: \"This is a description of feed the homeless. Need 8 participants to help go around DT Orlando to feed.\",\n  numVol: \"5\",\n  maxVol: \"8\"\n}, {\n  id: \"2\",\n  name: \"Concert Cleanup\",\n  description: \"This is a description of concert cleanup. Need 10 participants to help clean after a concert.\",\n  location: \"Amway Center\",\n  miles: \"3 miles\",\n  numVol: \"1\",\n  maxVol: \"10\"\n}, {\n  id: \"3\",\n  name: \"Set up Tents\",\n  description: \"This is a description of setting up tents. Need 6 participants.\",\n  location: \"UCF\",\n  miles: \"15 miles\",\n  numVol: \"2\",\n  maxVol: \"6\"\n}];","map":{"version":3,"sources":["/Users/lawrenceoconnor/Downloads/3 tables/cop4331-helpinghand-mobile/screens/volunteerTasks.js"],"names":["React","useState","useRef","useEffect","useNavigation","FloatingAction","VolunteerCard","useLocation","Card","ListItem","Icon","volunteerTask","navigation","unsubscribe","addListener","console","log","handleSubmit","_retrieveData","AsyncStorage","getItem","value","user_data","JSON","parse","localStorage","email","obj","js","stringify","fetch","method","headers","body","response","text","res","error","setPosts","alert","toString","posts","tasks","setTasks","selected","setSelected","idTrack","length","Object","values","taskObj","forEach","task","id","renderCards","map","index","_id","task_name","task_description","task_address","task_location","coordinates","max_slots","slots_available","task_date","flex","alignItems","backgroundColor","styles","header","StyleSheet","create","justifyContent","paddingHorizontal","paddingBottom","width","height","resizeMode","areasTest","name","location","miles","description","numVol","maxVol"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { FloatingAction } from \"react-native-floating-action\";\nimport VolunteerCard from \"./volunteetCard\";\nimport { useLocation } from \"react-router-dom\";\n\nimport {\n  View,\n  Text,\n  TouchableOpacity,\n  TextInput,\n  Platform,\n  StyleSheet,\n  Button,\n  ScrollView,\n} from \"react-native\";\nimport { Card, ListItem, Icon } from \"react-native-elements\";\n\nconst volunteerTask = ({navigation}) => {    \n  useEffect(() => {\n    const unsubscribe = navigation.addListener('focus', () => {\n      console.log('Refreshed');\n    async function handleSubmit(){\n\n  var user_data;\n\n  const _retrieveData = async () => {\n    try {\n      const value = await AsyncStorage.getItem('user_data');\n      if (value !== null) {\n        user_data= JSON.parse(localStorage.getItem(\"user_data\"))\n        console.log(value);\n      }\n    } catch (error) {\n      // Error retrieving data\n    }\n  };\n\n      console.log(user_data.email)\n      var obj = {email:user_data.email};\n      var js=JSON.stringify(obj);\n      console.log(js);\n\n      try{\n        const response = await fetch(\"https://helpinghand-cop4331.herokuapp.com/vol/tasks\" ,{\n          method: \"POST\",\n          headers: {\"Content-Type\" : \"application/json\"},\n          body : js,\n        });\n        var res=JSON.parse(await response.text() );\n        if (res.error != null){\n          console.log(res.error);\n        } else{\n          console.log(\"success\");\n          \n          if(res != \"nos such user found\"){\n            setPosts(res);\n          } else{\n            console.log(\"Thes call might have failed above buts its okay, there were no tasks\");\n          }\n          return res;\n        }\n      } catch (e){\n        alert(e.toString());\n        return ;\n      }\n    }\n      //test\n    handleSubmit();\n  });\n  return unsubscribe;\n}, [navigation]);\n\n  \n  const [posts, setPosts] = useState([]);\n  const [tasks, setTasks] = useState([]);\n  const [selected, setSelected] = useState({});\n  let idTrack = useRef(null);\n\n  useEffect(() => {\n    if (tasks && tasks.length > 0 && Object.values(selected).length === 0) {\n      let taskObj = {};\n      tasks.forEach((task) => (taskObj[task.id] = false));\n      setSelected(taskObj);\n    }\n  }, [tasks, selected]);\n\n\n  \n  //function to render the card template / replace with actual json obj returned\n  function renderCards() {\n    console.log(posts);\n\n    return posts.map((tasks,index) => (\n      <VolunteerCard\n        key={tasks._id}\n        name={tasks.task_name}\n        description={tasks.task_description}\n        address={tasks.task_address}\n        task_location={tasks.task_location.coordinates}\n        maxVol={tasks.max_slots}\n        numVol={tasks.slots_available}\n        task_date={tasks.task_date}\n        id = {tasks._id}\n\n      />\n    ));\n  }\n\n  return (\n    <View style={{ flex: 1, alignItems: \"center\", backgroundColor: \"#009387\" }}>\n      <View style={styles.header}>\n        <ScrollView>{renderCards()}</ScrollView>\n      </View>\n    </View>\n  );\n}\nexport default volunteerTask;\n\nconst styles = StyleSheet.create({\n  header: {\n    flex: 1,\n    justifyContent: \"center\",\n    paddingHorizontal: 5,\n    paddingBottom: 5,\n    width: \"90%\",\n    height: \"90%\",\n    resizeMode: \"contain\",\n  },\n});\n\nconst areasTest = [\n  {\n    id: \"1\",\n    name: \"Feed the Homeless\",\n    location: \"Downtown Orlando\",\n    miles: \"2.5 miles\",\n    description:\n      \"This is a description of feed the homeless. Need 8 participants to help go around DT Orlando to feed.\",\n    numVol: \"5\",\n    maxVol: \"8\",\n  },\n  {\n    id: \"2\",\n    name: \"Concert Cleanup\",\n    description:\n      \"This is a description of concert cleanup. Need 10 participants to help clean after a concert.\",\n    location: \"Amway Center\",\n    miles: \"3 miles\",\n    numVol: \"1\",\n    maxVol: \"10\",\n  },\n  {\n    id: \"3\",\n    name: \"Set up Tents\",\n    description:\n      \"This is a description of setting up tents. Need 6 participants.\",\n    location: \"UCF\",\n    miles: \"15 miles\",\n    numVol: \"2\",\n    maxVol: \"6\",\n  },\n];\n"]},"metadata":{},"sourceType":"module"}