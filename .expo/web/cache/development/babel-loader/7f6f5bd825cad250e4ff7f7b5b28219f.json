{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/andrewturpin/Documents/GitHub/cop4331-helpinghand-mobile/screens/coordinatorTasks.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { FloatingAction } from \"react-native-floating-action\";\nimport CoordCard from \"./coordCard\";\nimport { useLocation } from \"react-router-dom\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Card, ListItem, Icon } from \"react-native-elements\";\nimport { connect } from \"react-redux\";\nexport default function coortinatorTask() {\n  var navigation = useNavigation();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      posts = _useState2[0],\n      setPosts = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      tasks = _useState4[0],\n      setTasks = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selected = _useState6[0],\n      setSelected = _useState6[1];\n\n  var idTrack = useRef(null);\n  var user_data = localStorage.getItem(\"user_data\");\n  useEffect(function () {\n    if (tasks && tasks.length > 0 && Object.values(selected).length === 0) {\n      var taskObj = {};\n      tasks.forEach(function (task) {\n        return taskObj[task.id] = false;\n      });\n      setSelected(taskObj);\n    }\n  }, [tasks, selected]);\n  useEffect(function () {\n    function handleSubmit() {\n      var obj, js, response, res;\n      return _regeneratorRuntime.async(function handleSubmit$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              obj = {\n                email: 'alexrutledge1030@gmail.com'\n              };\n              js = JSON.stringify(obj);\n              console.log(js);\n              _context.prev = 3;\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(fetch(\"https://helpinghand-cop4331.herokuapp.com/coord/tasks\", {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                },\n                body: js\n              }));\n\n            case 6:\n              response = _context.sent;\n              _context.t0 = JSON;\n              _context.next = 10;\n              return _regeneratorRuntime.awrap(response.text());\n\n            case 10:\n              _context.t1 = _context.sent;\n              res = _context.t0.parse.call(_context.t0, _context.t1);\n\n              if (!(res.error != null)) {\n                _context.next = 16;\n                break;\n              }\n\n              console.log(res.error);\n              _context.next = 19;\n              break;\n\n            case 16:\n              console.log(\"success\");\n\n              if (res != \"nos such user found\") {\n                setPosts(res);\n              } else {\n                console.log(\"The call might have failed above buts its okay, there were no tasks\");\n              }\n\n              return _context.abrupt(\"return\", res);\n\n            case 19:\n              _context.next = 25;\n              break;\n\n            case 21:\n              _context.prev = 21;\n              _context.t2 = _context[\"catch\"](3);\n              alert(_context.t2.toString());\n              return _context.abrupt(\"return\");\n\n            case 25:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[3, 21]], Promise);\n    }\n\n    handleSubmit();\n  }, []);\n\n  var handleSelect = function handleSelect(id) {\n    var newSelected = _objectSpread({}, selected);\n\n    if (idTrack.current === null) {\n      idTrack.current = id;\n    }\n\n    if (selected[id]) {\n      newSelected[id] = false;\n      setSelected(newSelected);\n    } else {\n      if (idTrack.current !== id) {}\n\n      for (var prop in newSelected) {\n        newSelected[prop] = false;\n      }\n\n      newSelected[id] = true;\n      setSelected(newSelected);\n    }\n\n    idTrack.current = id;\n  };\n\n  var actions = [{\n    text: \"CreateTask\",\n    name: \"bt_createTask\",\n    position: 1\n  }];\n\n  function navigateToCreateTask() {\n    navigation.navigate(\"CreateTask\");\n  }\n\n  function renderCards() {\n    var _this = this;\n\n    console.log(posts);\n    return posts.map(function (tasks, index) {\n      return React.createElement(CoordCard, {\n        key: tasks._id,\n        name: tasks.task_name,\n        description: tasks.task_description,\n        task_location: tasks.task_location.coordinates,\n        maxVol: tasks.max_slots,\n        numVol: tasks.slots_available,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 7\n        }\n      });\n    });\n  }\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: \"center\",\n      backgroundColor: \"#009387\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }\n  }, React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, renderCards())), React.createElement(FloatingAction, {\n    color: \"#013d38\",\n    actions: actions,\n    onPressItem: function onPressItem() {\n      return navigateToCreateTask();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }));\n  console.log(tasks);\n}\nvar styles = StyleSheet.create({\n  header: {\n    flex: 1,\n    justifyContent: \"center\",\n    paddingHorizontal: 5,\n    paddingBottom: 5,\n    width: \"90%\",\n    height: \"90%\",\n    resizeMode: \"contain\"\n  }\n});\nvar areasTest = [{\n  id: \"1\",\n  name: \"Feed the Homelesss\",\n  location: \"Downtown Orlando\",\n  miles: \"2.5 miles\",\n  description: \"This is a description of feed the homeless. Need 8 participants to help go around DT Orlando to feed.\",\n  numVol: \"5\",\n  maxVol: \"8\"\n}, {\n  id: \"2\",\n  name: \"Concert Cleanup\",\n  description: \"This is a description of concert cleanup. Need 10 participants to help clean after a concert.\",\n  location: \"Amway Center\",\n  miles: \"3 miles\",\n  numVol: \"1\",\n  maxVol: \"10\"\n}, {\n  id: \"3\",\n  name: \"Set up Tents\",\n  description: \"This is a description of setting up tents. Need 6 participants.\",\n  location: \"UCF\",\n  miles: \"15 miles\",\n  numVol: \"2\",\n  maxVol: \"6\"\n}];","map":{"version":3,"sources":["/Users/andrewturpin/Documents/GitHub/cop4331-helpinghand-mobile/screens/coordinatorTasks.js"],"names":["useNavigation","React","useState","useRef","useEffect","FloatingAction","CoordCard","useLocation","Card","ListItem","Icon","connect","coortinatorTask","navigation","posts","setPosts","tasks","setTasks","selected","setSelected","idTrack","user_data","localStorage","getItem","length","Object","values","taskObj","forEach","task","id","handleSubmit","obj","email","js","JSON","stringify","console","log","fetch","method","headers","body","response","text","res","parse","error","alert","toString","handleSelect","newSelected","current","prop","actions","name","position","navigateToCreateTask","navigate","renderCards","map","index","_id","task_name","task_description","task_location","coordinates","max_slots","slots_available","flex","alignItems","backgroundColor","styles","header","StyleSheet","create","justifyContent","paddingHorizontal","paddingBottom","width","height","resizeMode","areasTest","location","miles","description","numVol","maxVol"],"mappings":"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","sourcesContent":["\nimport { useNavigation } from \"@react-navigation/native\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { FloatingAction } from \"react-native-floating-action\";\nimport CoordCard from \"./coordCard\";\nimport { useLocation } from \"react-router-dom\";\n\nimport {\n  View,\n  Text,\n  TouchableOpacity,\n  TextInput,\n  Platform,\n  StyleSheet,\n  Button,\n  ScrollView,\n} from \"react-native\";\nimport { Card, ListItem, Icon } from \"react-native-elements\";\nimport { connect } from \"react-redux\";\n\n//const buildPath = require(\"../../redux/buildPath\");\n\n\nexport default function coortinatorTask() {\n  const navigation = useNavigation();\n  const [posts, setPosts] = useState([]);\n  const [tasks, setTasks] = useState([]);\n  const [selected, setSelected] = useState({});\n  let idTrack = useRef(null);\n  var user_data=localStorage.getItem(\"user_data\");\n\n\n\n\n  useEffect(() => {\n    if (tasks && tasks.length > 0 && Object.values(selected).length === 0) {\n      let taskObj = {};\n      tasks.forEach((task) => (taskObj[task.id] = false));\n      setSelected(taskObj);\n    }\n  }, [tasks, selected]);\n\n\n  useEffect(() =>{\n    async function handleSubmit(){\n      var obj = {email:'alexrutledge1030@gmail.com'};\n      var js=JSON.stringify(obj);\n      console.log(js);\n\n      try{\n        const response = await fetch(\"https://helpinghand-cop4331.herokuapp.com/coord/tasks\",{\n          method: \"POST\",\n          headers: {\"Content-Type\" : \"application/json\"},\n          body : js,\n        });\n        var res=JSON.parse(await response.text() );\n        if (res.error != null){\n          console.log(res.error);\n        } else{\n          console.log(\"success\");\n          \n          if(res != \"nos such user found\"){\n            setPosts(res);\n          } else{\n            console.log(\"The call might have failed above buts its okay, there were no tasks\");\n          }\n          return res;\n        }\n      } catch (e){\n        alert(e.toString());\n        return ;\n      }\n    }\n      //test\n    handleSubmit();\n  }, []);\n\n  const handleSelect = (id) => {\n    let newSelected = { ...selected };\n    if (idTrack.current === null) {\n      idTrack.current = id;\n    }\n    if (selected[id]) {\n      // We are leaving the task\n      //Socket.send(JSON.stringify({topic: \"task\", action: \"leave\", message: {id: id, action: \"Leaving\"}}));\n      newSelected[id] = false;\n      setSelected(newSelected);\n    } else {\n      // We are joining the task\n      if (idTrack.current !== id) {\n        //Socket.send(JSON.stringify({topic: \"task\", action: \"leave\", message: {id: idTrack.current, action: \"Leaving\"}}));\n      }\n      //Socket.send(JSON.stringify({topic: \"task\", action: \"join\", message: {id: id, action: \"Joining\"}}));\n      for (const prop in newSelected) {\n        newSelected[prop] = false;\n      }\n      newSelected[id] = true;\n      setSelected(newSelected);\n    }\n    idTrack.current = id;\n  };\n\n\n\n  //actions for the floating action button\n  const actions = [\n    {\n      text: \"CreateTask\",\n      name: \"bt_createTask\",\n      position: 1,\n    },\n  ];\n\n  //function to navigate back to task list on cancel\n  function navigateToCreateTask() {\n    navigation.navigate(\"CreateTask\");\n  }\n\n  \n\n  //function to render the card template / replace with actual json obj returned\n  function renderCards() {\n    console.log(posts);\n\n    return posts.map((tasks,index) => (\n      <CoordCard   \n        key={tasks._id}\n        name={tasks.task_name}\n        description={tasks.task_description}\n        task_location={tasks.task_location.coordinates}\n        maxVol={tasks.max_slots}\n        numVol={tasks.slots_available}\n\n      />\n    ));\n  }\n\n  return (\n    <View style={{ flex: 1, alignItems: \"center\", backgroundColor: \"#009387\" }}>\n      <View style={styles.header}>\n        <ScrollView>{renderCards()}</ScrollView>\n      </View>\n      <FloatingAction\n        color=\"#013d38\"\n        actions={actions}\n        onPressItem={() => navigateToCreateTask()}\n      />\n    </View>\n  );\n  console.log(tasks)\n}\n\nconst styles = StyleSheet.create({\n  header: {\n    flex: 1,\n    justifyContent: \"center\",\n    paddingHorizontal: 5,\n    paddingBottom: 5,\n    width: \"90%\",\n    height: \"90%\",\n    resizeMode: \"contain\",\n  },\n});\n\nconst areasTest = [\n  {\n    id: \"1\",\n    name: \"Feed the Homelesss\",\n    location: \"Downtown Orlando\",\n    miles: \"2.5 miles\",\n    description:\n      \"This is a description of feed the homeless. Need 8 participants to help go around DT Orlando to feed.\",\n    numVol: \"5\",\n    maxVol: \"8\",\n  },\n  {\n    id: \"2\",\n    name: \"Concert Cleanup\",\n    description:\n      \"This is a description of concert cleanup. Need 10 participants to help clean after a concert.\",\n    location: \"Amway Center\",\n    miles: \"3 miles\",\n    numVol: \"1\",\n    maxVol: \"10\",\n  },\n  {\n    id: \"3\",\n    name: \"Set up Tents\",\n    description:\n      \"This is a description of setting up tents. Need 6 participants.\",\n    location: \"UCF\",\n    miles: \"15 miles\",\n    numVol: \"2\",\n    maxVol: \"6\",\n  },\n];\n"]},"metadata":{},"sourceType":"module"}