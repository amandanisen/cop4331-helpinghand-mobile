{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/lawrenceoconnor/Documents/GitHub/cop4331-helpinghand-mobile/screens/login.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport ReactNative from \"react-native-web/dist/index\";\nvar AppRegistry = ReactNative.AppRegistry,\n    StyleSheet = ReactNative.StyleSheet,\n    Text = ReactNative.Text,\n    View = ReactNative.View,\n    TouchableHighlight = ReactNative.TouchableHighlight,\n    Animated = ReactNative.Animated;\nvar isHidden = true;\n\nvar AppContainer = function (_Component) {\n  _inherits(AppContainer, _Component);\n\n  var _super = _createSuper(AppContainer);\n\n  function AppContainer(props) {\n    var _this;\n\n    _classCallCheck(this, AppContainer);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      bounceValue: new Animated.Value(100),\n      buttonText: \"Show Subview\"\n    };\n    return _this;\n  }\n\n  _createClass(AppContainer, [{\n    key: \"_toggleSubview\",\n    value: function _toggleSubview() {\n      this.setState({\n        buttonText: !isHidden ? \"Show Subview\" : \"Hide Subview\"\n      });\n      var toValue = 100;\n\n      if (isHidden) {\n        toValue = 0;\n      }\n\n      Animated.spring(this.state.bounceValue, {\n        toValue: toValue,\n        velocity: 3,\n        tension: 2,\n        friction: 8\n      }).start();\n      isHidden = !isHidden;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 7\n        }\n      }, React.createElement(TouchableHighlight, {\n        style: styles.button,\n        onPress: function onPress() {\n          _this2._toggleSubview();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.buttonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }\n      }, this.state.buttonText)), React.createElement(Animated.View, {\n        style: [styles.subView, {\n          transform: [{\n            translateY: this.state.bounceValue\n          }]\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }\n      }, \"This is a sub view\")));\n    }\n  }]);\n\n  return AppContainer;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F5FCFF',\n    marginTop: 66\n  },\n  button: {\n    padding: 8\n  },\n  buttonText: {\n    fontSize: 17,\n    color: \"#007AFF\"\n  },\n  subView: {\n    position: \"absolute\",\n    bottom: 0,\n    left: 0,\n    right: 0,\n    backgroundColor: \"#FFFFFF\",\n    height: 100\n  }\n});\nAppRegistry.registerComponent('AppContainer', function () {\n  return AppContainer;\n});","map":{"version":3,"sources":["/Users/lawrenceoconnor/Documents/GitHub/cop4331-helpinghand-mobile/screens/login.js"],"names":["React","Component","ReactNative","AppRegistry","StyleSheet","Text","View","TouchableHighlight","Animated","isHidden","AppContainer","props","state","bounceValue","Value","buttonText","setState","toValue","spring","velocity","tension","friction","start","styles","container","button","_toggleSubview","subView","transform","translateY","create","flex","justifyContent","alignItems","backgroundColor","marginTop","padding","fontSize","color","position","bottom","left","right","height","registerComponent"],"mappings":"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","sourcesContent":["'use strict';\n\nimport React, {Component} from 'react';\nimport ReactNative from 'react-native';\n\nconst {\n  AppRegistry,\n  StyleSheet,\n  Text,\n  View,\n  TouchableHighlight,\n  Animated\n} = ReactNative;\n\n\nvar isHidden = true;\n\nclass AppContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bounceValue: new Animated.Value(100),  //This is the initial position of the subview\n      buttonText: \"Show Subview\"\n    };\n  }\n  \n  \n  _toggleSubview() {    \n    this.setState({\n      buttonText: !isHidden ? \"Show Subview\" : \"Hide Subview\"\n    });\n    \n    var toValue = 100;\n    \n    if(isHidden) {\n      toValue = 0;\n    }\n\n    //This will animate the transalteY of the subview between 0 & 100 depending on its current state\n    //100 comes from the style below, which is the height of the subview.\n    Animated.spring(\n      this.state.bounceValue,\n      {\n        toValue: toValue,\n        velocity: 3,\n        tension: 2,\n        friction: 8,\n      }\n    ).start();\n    \n    isHidden = !isHidden;\n  }\n  \n  render() {\n    return (\n      <View style={styles.container}>\n          <TouchableHighlight style={styles.button} onPress={()=> {this._toggleSubview()}}>\n            <Text style={styles.buttonText}>{this.state.buttonText}</Text>\n          </TouchableHighlight>\n          <Animated.View\n            style={[styles.subView,\n              {transform: [{translateY: this.state.bounceValue}]}]}\n          >\n            <Text>This is a sub view</Text>\n          </Animated.View>\n      </View>\n    );\n  }\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F5FCFF',\n    marginTop: 66\n  },\n  button: {\n    padding: 8,\n  },\n  buttonText: {\n    fontSize: 17,\n    color: \"#007AFF\"\n  },\n  subView: {\n    position: \"absolute\",\n    bottom: 0,\n    left: 0,\n    right: 0,\n    backgroundColor: \"#FFFFFF\",\n    height: 100,\n  }\n});\n\nAppRegistry.registerComponent('AppContainer', () => AppContainer);"]},"metadata":{},"sourceType":"module"}