{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\andre\\\\Documents\\\\GitHub\\\\cop4331-helpinghand-mobile\\\\screens\\\\coordinatorTasks.js\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { FloatingAction } from \"react-native-floating-action\";\nimport CoordCard from \"./coordCard\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Card, ListItem, Icon } from \"react-native-elements\";\nexport default function coortinatorTask() {\n  var navigation = useNavigation();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      posts = _useState2[0],\n      setPosts = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      tasks = _useState4[0],\n      setTasks = _useState4[1];\n\n  var user_data = localStorage.getItem(\"user_data\");\n  var actions = [{\n    text: \"CreateTask\",\n    name: \"bt_createTask\",\n    position: 1\n  }];\n\n  function navigateToCreateTask() {\n    navigation.navigate(\"CreateTask\");\n  }\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: \"center\",\n      backgroundColor: \"#009387\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  })), React.createElement(FloatingAction, {\n    color: \"#013d38\",\n    actions: actions,\n    onPressItem: function onPressItem() {\n      return navigateToCreateTask();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  header: {\n    flex: 1,\n    justifyContent: \"center\",\n    paddingHorizontal: 5,\n    paddingBottom: 5,\n    width: \"90%\",\n    height: \"90%\",\n    resizeMode: \"contain\"\n  }\n});\nvar areasTest = [{\n  id: \"1\",\n  name: \"Feed the Homelesss\",\n  location: \"Downtown Orlando\",\n  miles: \"2.5 miles\",\n  description: \"This is a description of feed the homeless. Need 8 participants to help go around DT Orlando to feed.\",\n  numVol: \"5\",\n  maxVol: \"8\"\n}, {\n  id: \"2\",\n  name: \"Concert Cleanup\",\n  description: \"This is a description of concert cleanup. Need 10 participants to help clean after a concert.\",\n  location: \"Amway Center\",\n  miles: \"3 miles\",\n  numVol: \"1\",\n  maxVol: \"10\"\n}, {\n  id: \"3\",\n  name: \"Set up Tents\",\n  description: \"This is a description of setting up tents. Need 6 participants.\",\n  location: \"UCF\",\n  miles: \"15 miles\",\n  numVol: \"2\",\n  maxVol: \"6\"\n}];","map":{"version":3,"sources":["C:/Users/andre/Documents/GitHub/cop4331-helpinghand-mobile/screens/coordinatorTasks.js"],"names":["useNavigation","React","useState","useRef","useEffect","FloatingAction","CoordCard","Card","ListItem","Icon","coortinatorTask","navigation","posts","setPosts","tasks","setTasks","user_data","localStorage","getItem","actions","text","name","position","navigateToCreateTask","navigate","flex","alignItems","backgroundColor","styles","header","StyleSheet","create","justifyContent","paddingHorizontal","paddingBottom","width","height","resizeMode","areasTest","id","location","miles","description","numVol","maxVol"],"mappings":"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","sourcesContent":["\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport React, { useState, useRef, useEffect } from \"react\";\r\nimport { FloatingAction } from \"react-native-floating-action\";\r\nimport CoordCard from \"./coordCard\";\r\nimport {\r\n  View,\r\n  Text,\r\n  TouchableOpacity,\r\n  TextInput,\r\n  Platform,\r\n  StyleSheet,\r\n  Button,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { Card, ListItem, Icon } from \"react-native-elements\";\r\n\r\nexport default function coortinatorTask() {\r\n  const navigation = useNavigation();\r\n  const [posts, setPosts] = useState([]);\r\n  const [tasks, setTasks] = useState([]);\r\n  var user_data=localStorage.getItem(\"user_data\");\r\n\r\n\r\n  //actions for the floating action button\r\n  const actions = [\r\n    {\r\n      text: \"CreateTask\",\r\n      name: \"bt_createTask\",\r\n      position: 1,\r\n    },\r\n  ];\r\n\r\n  //function to navigate back to task list on cancel\r\n  function navigateToCreateTask() {\r\n    navigation.navigate(\"CreateTask\");\r\n  }\r\n/*\r\n  //function to render the card template / replace with actual json obj returned\r\n  function renderCards() {\r\n    return areasTest.map((task) => (\r\n      <CoordCard\r\n        key={task.id}\r\n        name={task.name}\r\n        description={task.description}\r\n        location={task.location}\r\n        miles={task.miles}\r\n        numVol={task.numVol}\r\n        maxVol={task.maxVol}\r\n      />\r\n    ));\r\n  }*/\r\n\r\n  return (\r\n    <View style={{ flex: 1, alignItems: \"center\", backgroundColor: \"#009387\" }}>\r\n      <View style={styles.header}>\r\n        <ScrollView>{}</ScrollView>\r\n      </View>\r\n      <FloatingAction\r\n        color=\"#013d38\"\r\n        actions={actions}\r\n        onPressItem={() => navigateToCreateTask()}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  header: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    paddingHorizontal: 5,\r\n    paddingBottom: 5,\r\n    width: \"90%\",\r\n    height: \"90%\",\r\n    resizeMode: \"contain\",\r\n  },\r\n});\r\n\r\nconst areasTest = [\r\n  {\r\n    id: \"1\",\r\n    name: \"Feed the Homelesss\",\r\n    location: \"Downtown Orlando\",\r\n    miles: \"2.5 miles\",\r\n    description:\r\n      \"This is a description of feed the homeless. Need 8 participants to help go around DT Orlando to feed.\",\r\n    numVol: \"5\",\r\n    maxVol: \"8\",\r\n  },\r\n  {\r\n    id: \"2\",\r\n    name: \"Concert Cleanup\",\r\n    description:\r\n      \"This is a description of concert cleanup. Need 10 participants to help clean after a concert.\",\r\n    location: \"Amway Center\",\r\n    miles: \"3 miles\",\r\n    numVol: \"1\",\r\n    maxVol: \"10\",\r\n  },\r\n  {\r\n    id: \"3\",\r\n    name: \"Set up Tents\",\r\n    description:\r\n      \"This is a description of setting up tents. Need 6 participants.\",\r\n    location: \"UCF\",\r\n    miles: \"15 miles\",\r\n    numVol: \"2\",\r\n    maxVol: \"6\",\r\n  },\r\n];\r\n"]},"metadata":{},"sourceType":"module"}